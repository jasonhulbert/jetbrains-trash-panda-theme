local colors = require("trashpanda.colors")
-- Trash Panda theme definition, the actual color mappings
local trashpanda = {}
	
trashpanda.classic = {
	-- Base
	-- 	User Input
	Normal = { fg = colors.base6, bg = colors.base1 },
	NormalNC = { fg = colors.base6, bg = colors.base1 },
	Insert = { fg = colors.base6, bg = colors.base1 },
	Visual = { fg = colors.accent, bg = colors.accent_mod3 }, 
	VisualNOS = { fg = colors.accent , bg = colors.accent_mod3},
	NonText = { fg = colors.base6, bg = colors.base1 },
	EndOfBuffer = { fg = colors.base6, bg = colors.base1 },
	Cursor = { fg = colors.green, bg = colors.debug },
	ColorColumn = { fg = colors.green, bg = colors.base2 },
	CursorLineNr = { fg = colors.green, bg = colors.base1 },
	Conceal = { fg = colors.debug, bg = colors.base3},
	CursorColumn = { fg = colors.debug, bg = colors.blue },
	CursorLine = { fg = colors.green, bg = colors.base2 },
	Search = { fg = colors.class_purple, bg = colors.base3 },
	IncSearch = { fg = colors.blue, bg = colors.base3 },
	CurSearch = { fg = colors.blue, bg = colors.base3 },
	SignColumn = { fg = colors.cyan, bg = colors.base1 },
	LineNr = { fg = colors.base6 },
	SpecialKey = { fg = colors.yellow_mod2 },
	SpellBad = { undercurl = true },
	SpellCap = { undercurl = true },
	SpellLocal = { undercurl = true },
	SpellRare = { undercurl = true },
	MatchParen = { fg = colors.base8, bg = colors.accent },
	--	Windows
	ErrorMsg  = { fg = colors.red },
	Directory = { fg = colors.blue, bg = colors.base1 },
	WinSeparator = { fg = colors.base3, bg = colors.base1 },
	Folded = { fg = colors.class_purple, bg = colors.base3 },
	FoldColumn = { fg = colors.debug, bg = colors.base4 },
	Pmenu = { fg = colors.green, bg = colors.base2 },
	PmenuSel = { fg = colors.base2, bg = colors.green },
	PemuSbar = { bg = colors.base3 },
	PmenuThumb = { bg = colors.green },
	Question = { fg = colors.red, bg = colors.base4 },
	QuickFixLine = { fg = colors.blue_mod2 },
	StatusLine = { fg = colors.green, bg = colors.base2 },
	StatusLineNC = { fg = colors.green, bg = colors.base2},
	StatusLineTerm = { fg = colors.green, bg = colors.base2},
	StatusLineTermNC = { fg = colors.green, bg = colors.base2},
	WinBar = { fg = colors.green, bg = colors.base2},
	WinBarNC = { fg = colors.green, bg = colors.base2},
	TabLine = { fg = colors.green, bg = colors.base2},
	TabLineSel = { fg = colors.green, bg = colors.base2},
	TabLineFill = { fg = colors.green, bg = colors.base2},
	Terminal = { fg = colors.green, bg = colors.base2},
	WarningMsg = { fg = colors.red, bg = colors.red_mod1},
	WildMenu = { fg = colors.debug, bg = colors.debug},
	FloatBoarder = { fg = colors.debug, bg = colors.debug},
	--	Code Elements
	Title = { fg = colors.green_mod2, bg = colors.base2, bold = true },
	Operator = { fg = colors.base6 },
	Delimiter = { fg = colors.base6 },
	Identifier = { fg = colors.base6 },
	SpecialChar = { fg = colors.debug},
	Number = { fg = colors.pink },
	Float = { fg = colors.pink },
	String = { fg = colors.yellow },
	Error = { fg = colors.red_mod3, bg = colors.red },
	Comment = { fg = colors.base5 },
	Constant = { fg = colors.base6 },
	Special = { fg = colors.green_mod2 },
	Statement = { fg = colors.purple },
	PreProc = { fg = colors.yellow },
	Underlined = { fg = colors.red, bg = colors.debug },
	Ignore = { fg = colors.disabled, bg = colors.debug },
	Todo = { fg = colors.accent, bg = colors.accent_mod3 },
	Character = { fg = colors.yellow },
	Boolean = { fg = colors.purple },
	Function = { fg = colors.lime },
	Conditional = { fg = colors.purple },
	Repeat = { fg = colors.purple },
	Label = { fg = colors.lime },
	Keyword = { fg = colors.purple },
	Exception = { fg = colors.red },
	Include = { fg = colors.purple },
	Define = { fg = colors.cyan },
	Macro = { fg = colors.macro_blue  },
	PreCondit = { fg = colors.debug },
	StorageClass = { fg = colors.purple },
	Structure = { fg = colors.class_purple },
	Type = { fg = colors.lime },
	Typedef = { fg = colors.typedef_purple },
	Tag = { fg = colors.cyan },
	SpecialComment = { fg = colors.debug },
	Exception = { fg = colors.macro_blue },
	Debug = { fg = colors.debug },
	--	Nvim-Treesitter
	ConstBuiltin = { fg = colors.green },
	PunctuationSpecial = { fg = colors.cyan },
	FunctionMacro = { fg = colors.cyan },
	FunctionBuiltin = { fg = colors.lime },
	--	Git
	GitBranch = { fg = colors.purple, bg = colors.base2 },
	GitDirty = { fg = colors.green_mod2, bg = colors.base2 },
	GitAdd = { fg = colors.green, bg = colors.base2 },
	GitChanged = { fg = colors.orange, bg = colors.base2 },
	GitRemoved = { fg = colors.red, bg = colors.base2 },
	DiffAdd = { fg = colors.diff.grey, bg = colors.diff.green },
	DiffChange = { fg = colors.diff.orange },
	DiffDelete = { fg = colors.diff.grey, bg = colors.diff.red },
	DiffText = { fg = colors.diff.grey, bg = colors.diff.orange },
	--TODO Get color for git add lines working, cuz that shit is currently jank af

	--	Heirline Theme
	ReadOnly = { fg = colors.red },
	Modified = { fg = colors.blue },
	UnModified = { fg = colors.base4 },
	NormalMode = { fg = colors.base3, bg = colors.base3 },
	InsertMode = { fg = colors.blue, bg = colors.blue },
	VisualMode = { fg = colors.yellow, bg = colors.yellow },
	ReplaceMode = { fg = colors.red, bg = colors.red },
	CommandMode = { fg = colors.green, bg = colors.green },
	SelectMode = { fg = colors.purple, bg = colors.purple },
	WorkingDir = { fg = colors.base4, bg = colors.base2 },
	CurrentPath = { fg = colors.base6, bg = colors.base2 },
	FileName = { fg = colors.green, bg = colors.base2 },
	FileProperties = { fg = colors.green, bg = colors.base2 },
	SearchResults = { fg = colors.debug, bg = colors.base2 },
	Ruler = { bg = colors.base2, bold = true },
	TerminalName = { fg = colors.green, bg = colors.base2 },
	TerminalStatusLine = { fg = colors.green, bg = colors.base2 },
	StringSpecial = { fg = colors.class_purple, bg = colors.base2 },
	FileType = { fg = colors.green, bg = colors.base2 },
	WinTab = { fg = colors.debug, bg = colors.base8 },
	--FileName = { fg = colors.debug, bg = colors.base2 },
	-- 	Lsp Servers
	LspColors = {

	},
	LspServer = { fg = colors.debug, bg = colors.base8 },
	LspIndicator = { fg = colors.debug, bg = colors.base8 },
	--	Diagnostics
	DiagnosticError = { fg = colors.red, bg = colors.base1 },
	DiagnosticWarn = { fg = colors.orange, bg = colors.base1 },
	DiagnosticInfo = { fg = colors.green, bg = colors.base1 },
	DiagnosticHint = { fg = colors.blue, bg = colors.base1 },
	--	Markdown/Special Text
	htmlLink = { fg = colors.blue, bg = colors.base1 },
}

return trashpanda
